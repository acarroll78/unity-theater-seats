// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Show : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Show GetRootAsShow(ByteBuffer _bb) { return GetRootAsShow(_bb, new Show()); }
  public static Show GetRootAsShow(ByteBuffer _bb, Show obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Show __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint FilmId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public long ShowTime { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<Show> CreateShow(FlatBufferBuilder builder,
      uint id = 0,
      uint filmId = 0,
      long showTime = 0) {
    builder.StartTable(3);
    Show.AddShowTime(builder, showTime);
    Show.AddFilmId(builder, filmId);
    Show.AddId(builder, id);
    return Show.EndShow(builder);
  }

  public static void StartShow(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(0, id, 0); }
  public static void AddFilmId(FlatBufferBuilder builder, uint filmId) { builder.AddUint(1, filmId, 0); }
  public static void AddShowTime(FlatBufferBuilder builder, long showTime) { builder.AddLong(2, showTime, 0); }
  public static Offset<Show> EndShow(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Show>(o);
  }
};

